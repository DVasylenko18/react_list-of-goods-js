{"version":3,"sources":["components/GoodItem/GoodItem.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodItem","good","GoodList","goods","map","goodsFromServer","SORT_FIELD_ALP","SORT_FIELD_LEN","isLight","sortField","SORT_FIELD","App","useState","setSortField","isReversed","setReversed","isReset","setReset","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,KCCTC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BAEIA,EAAMC,KAAI,SAAAH,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCDtBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,iBACjBC,EAAiB,SAyBvB,SAASC,EAAQC,EAAWC,GAC1B,OAAID,IAAcC,EACT,GAGF,WAGF,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBI,EAAlB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA4BH,oBAAS,GAArC,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EAnCR,SAA0Bf,EAA1B,GAA6D,IAA1BM,EAAyB,EAAzBA,UAAWK,EAAc,EAAdA,WACtCK,EAAa,YAAOhB,GAe1B,OAbIM,GACFU,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQb,GACN,KAAKH,EACH,OAAOe,EAAME,cAAcD,GAC7B,KAAKf,EACH,OAAOc,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXV,EACKK,EAAcM,UAGhBN,EAecO,CAAiBrB,EACpC,CAAEI,YAAWK,eAEf,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPf,EAAaP,GACbW,GAAS,IAEXY,KAAK,SACLF,UAAS,yBAAoBnB,EAAQC,EAAWH,IANlD,iCAWA,wBACEsB,QAAS,WACPf,EAAaN,GACbU,GAAS,IAEXY,KAAK,SACLF,UAAS,yBAAoBnB,EAAQC,EAAWF,IANlD,4BAWA,wBACEqB,QAAS,WACPb,GAAaD,GACbD,EAAaJ,GACbQ,IAASH,GAA4B,KAAdL,IAA2B,KAEpDoB,KAAK,SACLF,UAAS,yBAAoBb,EAAa,GAAK,YAPjD,qBAaEE,EACE,wBACEY,QAAS,WACPf,EAAa,IACbI,GAAS,GACTF,GAAY,IAEdc,KAAK,SACLF,UAAU,4BAPZ,mBADK,MAiBX,6BACE,cAAC,EAAD,CAAUxB,MAAOe,UChHzBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd7c5caa.chunk.js","sourcesContent":["export const GoodItem = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodItem } from '../GoodItem';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {\n      goods.map(good => (\n        <GoodItem good={good} key={good} />\n      ))\n    }\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALP = 'alphabetically';\nconst SORT_FIELD_LEN = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALP:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LEN:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nfunction isLight(sortField, SORT_FIELD) {\n  if (sortField === SORT_FIELD) {\n    return '';\n  }\n\n  return 'is-light';\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setReversed] = useState(false);\n  const [isReset, setReset] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SORT_FIELD_ALP);\n            setReset(true);\n          }}\n          type=\"button\"\n          className={`button is-info ${isLight(sortField, SORT_FIELD_ALP)}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SORT_FIELD_LEN);\n            setReset(true);\n          }}\n          type=\"button\"\n          className={`button is-info ${isLight(sortField, SORT_FIELD_LEN)}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReversed(!isReversed);\n            setSortField(sortField);\n            setReset(isReversed && sortField === '' ? false : '');\n          }}\n          type=\"button\"\n          className={`button is-info ${isReversed ? '' : 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        {\n          isReset ? (\n            <button\n              onClick={() => {\n                setSortField('');\n                setReset(false);\n                setReversed(false);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          ) : ``\n        }\n\n      </div>\n\n      <ul>\n        <GoodList goods={visibleGoods} />\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}